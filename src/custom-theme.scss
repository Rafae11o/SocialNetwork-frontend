
// Custom Theming for Angular Material
// For more information: https://material.angular.io/guide/theming
@use '@angular/material' as mat;
@use 'sass:map';
// Plus imports for other components in your app.

// Include the common styles for Angular Material. We include this here so that you only
// have to load a single css file for Angular Material in your app.
// Be sure that you only ever include this mixin once!
@include mat.core();

// Define the palettes for your theme using the Material Design palettes available in palette.scss
// (imported above). For each palette, you can optionally specify a default, lighter, and darker
// hue. Available color palettes: https://material.io/design/color/

$light-blue-palette: (
  50: #E2F4FF,
  100: #BAE2FF,
  200: #88D0FF,
  300: #46BDFF,
  400: #00ADFF,
  500: #009DFF,
  600: #008EFF,
  700: #0079FF,
  800: #0066FF,
  900: #2341E0,
  contrast: (
   50: rgba(black, 0.87),
   100: rgba(black, 0.87),
   200: rgba(black, 0.87),
   300: white,
   400: white,
   500: white,
   600: white,
   700: white,
   800: white,
   900: white,
 )
);

$app-primary: mat.define-palette($light-blue-palette);
$app-accent: mat.define-palette(mat.$pink-palette, A200, A100, A400);

// The warn palette is optional (defaults to red).
$app-warn: mat.define-palette(mat.$red-palette);

$notification-info: map.get(mat.$blue-palette, 400);
$notification-success: map.get(mat.$green-palette, 400);
$notification-warning: map.get(mat.$yellow-palette, 400);
$notification-error: map.get(mat.$red-palette, 400);
// Create the theme object. A theme consists of configurations for individual
// theming systems such as "color" or "typography".
$app-theme: mat.define-light-theme((
  color: (
    primary: $app-primary,
    accent: $app-accent,
    warn: $app-warn,
  )
));

// Include theme styles for core and each component used in your app.
// Alternatively, you can import and @include the theme mixins for each component
// that you are using.
@include mat.all-component-themes($app-theme);

